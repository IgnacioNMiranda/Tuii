
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BV COMA COMILLA DIGIT DIV ELSE ID IF IGUAL INT LC LK LP MAIN MAS MATRIX MENOS MUL PC PRINT RC RK RP SUM TEXT\n    ini : main\n        | vacio\n    \n    main : MAIN LK sentence RK\n    \n    vacio :\n    \n    sentence : single_stmt\n            | if_stmt\n            | single_stmt sentence\n            | if_stmt sentence\n    \n    single_stmt : decl\n                | single_op\n                | print\n    \n    decl : int_decl\n        | matrix_decl\n    \n      int_decl : INT ID IGUAL term PC\n    \n    term : DIGIT\n        | ID\n        | sum_function operator_term\n    \n    operator_term : operator_term operator term\n                  | vacio\n    \n    sum_function : SUM LP ID RP\n    \n    operator : MAS\n            | MENOS\n            | MUL\n            | DIV\n    \n    matrix_decl : MATRIX ID IGUAL LC matrix_value RC PC\n    \n    matrix_value : DIGIT possibly_next_matrix_row_value possibly_next_matrix_row\n    \n    possibly_next_matrix_row_value : COMA matrix_value possibly_next_matrix_row_value\n                                   | vacio\n    \n    possibly_next_matrix_row : matrix_nextvalue possibly_next_matrix_row\n                             | vacio\n    \n    matrix_nextvalue : BV matrix_value\n                     | vacio\n    \n    single_op : ID IGUAL term\n    \n    print : PRINT LP ID RP\n          | PRINT LP TEXT RP\n    \n    if_stmt : IF ID LK single_stmt RK\n            | IF ID LK single_stmt RK ELSE LK single_stmt RK\n    '
    
_lr_action_items = {'MAIN':([0,],[4,]),'$end':([0,1,2,3,19,],[-4,0,-1,-2,-3,]),'LK':([4,22,55,],[5,27,62,]),'IF':([5,7,8,9,10,11,14,15,28,29,30,31,38,39,41,42,45,52,56,57,63,73,],[12,12,12,-9,-10,-11,-12,-13,-16,-33,-15,-4,-17,-19,-34,-35,-36,-14,-18,-20,-25,-37,]),'ID':([5,7,8,9,10,11,12,14,15,17,18,23,24,27,28,29,30,31,35,38,39,40,41,42,45,46,47,48,49,50,52,56,57,62,63,73,],[13,13,13,-9,-10,-11,22,-12,-13,25,26,28,33,13,-16,-33,-15,-4,28,-17,-19,51,-34,-35,-36,28,-21,-22,-23,-24,-14,-18,-20,13,-25,-37,]),'PRINT':([5,7,8,9,10,11,14,15,27,28,29,30,31,38,39,41,42,45,52,56,57,62,63,73,],[16,16,16,-9,-10,-11,-12,-13,16,-16,-33,-15,-4,-17,-19,-34,-35,-36,-14,-18,-20,16,-25,-37,]),'INT':([5,7,8,9,10,11,14,15,27,28,29,30,31,38,39,41,42,45,52,56,57,62,63,73,],[17,17,17,-9,-10,-11,-12,-13,17,-16,-33,-15,-4,-17,-19,-34,-35,-36,-14,-18,-20,17,-25,-37,]),'MATRIX':([5,7,8,9,10,11,14,15,27,28,29,30,31,38,39,41,42,45,52,56,57,62,63,73,],[18,18,18,-9,-10,-11,-12,-13,18,-16,-33,-15,-4,-17,-19,-34,-35,-36,-14,-18,-20,18,-25,-37,]),'RK':([6,7,8,9,10,11,14,15,20,21,28,29,30,31,37,38,39,41,42,45,52,56,57,63,69,73,],[19,-5,-6,-9,-10,-11,-12,-13,-7,-8,-16,-33,-15,-4,45,-17,-19,-34,-35,-36,-14,-18,-20,-25,73,-37,]),'IGUAL':([13,25,26,],[23,35,36,]),'LP':([16,32,],[24,40,]),'DIGIT':([23,35,44,46,47,48,49,50,60,67,],[30,30,54,30,-21,-22,-23,-24,54,54,]),'SUM':([23,35,46,47,48,49,50,],[32,32,32,-21,-22,-23,-24,]),'TEXT':([24,],[34,]),'PC':([28,30,31,38,39,43,56,57,58,],[-16,-15,-4,-17,-19,52,-18,-20,63,]),'MAS':([28,30,31,38,39,56,57,],[-16,-15,-4,47,-19,-18,-20,]),'MENOS':([28,30,31,38,39,56,57,],[-16,-15,-4,48,-19,-18,-20,]),'MUL':([28,30,31,38,39,56,57,],[-16,-15,-4,49,-19,-18,-20,]),'DIV':([28,30,31,38,39,56,57,],[-16,-15,-4,50,-19,-18,-20,]),'RP':([33,34,51,],[41,42,57,]),'LC':([36,],[44,]),'ELSE':([45,],[55,]),'RC':([53,54,59,61,64,65,66,68,70,71,72,],[58,-4,-4,-28,-26,-4,-30,-4,-29,-31,-27,]),'COMA':([54,59,61,64,65,66,68,70,71,72,],[60,-4,-28,-26,-4,-30,60,-29,-31,-27,]),'BV':([54,59,61,64,65,66,68,70,71,72,],[-4,67,-28,-26,67,-30,-4,-29,-31,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ini':([0,],[1,]),'main':([0,],[2,]),'vacio':([0,31,54,59,65,68,],[3,39,61,66,66,61,]),'sentence':([5,7,8,],[6,20,21,]),'single_stmt':([5,7,8,27,62,],[7,7,7,37,69,]),'if_stmt':([5,7,8,],[8,8,8,]),'decl':([5,7,8,27,62,],[9,9,9,9,9,]),'single_op':([5,7,8,27,62,],[10,10,10,10,10,]),'print':([5,7,8,27,62,],[11,11,11,11,11,]),'int_decl':([5,7,8,27,62,],[14,14,14,14,14,]),'matrix_decl':([5,7,8,27,62,],[15,15,15,15,15,]),'term':([23,35,46,],[29,43,56,]),'sum_function':([23,35,46,],[31,31,31,]),'operator_term':([31,],[38,]),'operator':([38,],[46,]),'matrix_value':([44,60,67,],[53,68,71,]),'possibly_next_matrix_row_value':([54,68,],[59,72,]),'possibly_next_matrix_row':([59,65,],[64,70,]),'matrix_nextvalue':([59,65,],[65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ini","S'",1,None,None,None),
  ('ini -> main','ini',1,'p_ini','Tuii.py',121),
  ('ini -> vacio','ini',1,'p_ini','Tuii.py',122),
  ('main -> MAIN LK sentence RK','main',4,'p_main','Tuii.py',130),
  ('vacio -> <empty>','vacio',0,'p_vacio','Tuii.py',137),
  ('sentence -> single_stmt','sentence',1,'p_sentence','Tuii.py',145),
  ('sentence -> if_stmt','sentence',1,'p_sentence','Tuii.py',146),
  ('sentence -> single_stmt sentence','sentence',2,'p_sentence','Tuii.py',147),
  ('sentence -> if_stmt sentence','sentence',2,'p_sentence','Tuii.py',148),
  ('single_stmt -> decl','single_stmt',1,'p_single_stmt','Tuii.py',159),
  ('single_stmt -> single_op','single_stmt',1,'p_single_stmt','Tuii.py',160),
  ('single_stmt -> print','single_stmt',1,'p_single_stmt','Tuii.py',161),
  ('decl -> int_decl','decl',1,'p_decl','Tuii.py',169),
  ('decl -> matrix_decl','decl',1,'p_decl','Tuii.py',170),
  ('int_decl -> INT ID IGUAL term PC','int_decl',5,'p_int_decl','Tuii.py',178),
  ('term -> DIGIT','term',1,'p_term','Tuii.py',186),
  ('term -> ID','term',1,'p_term','Tuii.py',187),
  ('term -> sum_function operator_term','term',2,'p_term','Tuii.py',188),
  ('operator_term -> operator_term operator term','operator_term',3,'p_operator_term','Tuii.py',198),
  ('operator_term -> vacio','operator_term',1,'p_operator_term','Tuii.py',199),
  ('sum_function -> SUM LP ID RP','sum_function',4,'p_sum_function','Tuii.py',210),
  ('operator -> MAS','operator',1,'p_operator','Tuii.py',218),
  ('operator -> MENOS','operator',1,'p_operator','Tuii.py',219),
  ('operator -> MUL','operator',1,'p_operator','Tuii.py',220),
  ('operator -> DIV','operator',1,'p_operator','Tuii.py',221),
  ('matrix_decl -> MATRIX ID IGUAL LC matrix_value RC PC','matrix_decl',7,'p_matrix_decl','Tuii.py',229),
  ('matrix_value -> DIGIT possibly_next_matrix_row_value possibly_next_matrix_row','matrix_value',3,'p_matrix_value','Tuii.py',237),
  ('possibly_next_matrix_row_value -> COMA matrix_value possibly_next_matrix_row_value','possibly_next_matrix_row_value',3,'p_possibly_next_matrix_row_value','Tuii.py',244),
  ('possibly_next_matrix_row_value -> vacio','possibly_next_matrix_row_value',1,'p_possibly_next_matrix_row_value','Tuii.py',245),
  ('possibly_next_matrix_row -> matrix_nextvalue possibly_next_matrix_row','possibly_next_matrix_row',2,'p_possibly_next_matrix_row','Tuii.py',255),
  ('possibly_next_matrix_row -> vacio','possibly_next_matrix_row',1,'p_possibly_next_matrix_row','Tuii.py',256),
  ('matrix_nextvalue -> BV matrix_value','matrix_nextvalue',2,'p_matrix_nextvalue','Tuii.py',267),
  ('matrix_nextvalue -> vacio','matrix_nextvalue',1,'p_matrix_nextvalue','Tuii.py',268),
  ('single_op -> ID IGUAL term','single_op',3,'p_single_op','Tuii.py',279),
  ('print -> PRINT LP ID RP','print',4,'p_print','Tuii.py',287),
  ('print -> PRINT LP TEXT RP','print',4,'p_print','Tuii.py',288),
  ('if_stmt -> IF ID LK single_stmt RK','if_stmt',5,'p_if_stmt','Tuii.py',296),
  ('if_stmt -> IF ID LK single_stmt RK ELSE LK single_stmt RK','if_stmt',9,'p_if_stmt','Tuii.py',297),
]
